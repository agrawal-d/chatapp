{"version":3,"sources":["components/Toast.js","components/LoginForm.js","components/ChatBox.js","components/Results.js","components/SearchResults.js","components/Chat.js","App.js","serviceWorker.js","index.js","loading.gif","config.js"],"names":["Toast","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","fadeOut","bind","assertThisInitialized","state","hidden","message","interval","setTimeout","time","clearTimeout","setState","toastDuration","react_default","a","createElement","className","tabIndex","React","Component","Loginform","passwordInput","nameInput","newAccount","handleProceedButton","handleNameChange","handlePasswordChange","handleNewAccountChange","handleEnterkey","e","keyCode","target","value","checked","onSubmit","preventDefault","placeholder","maxLength","onChange","type","onKeyUp","onClick","id","htmlFor","Chatbox","scrollToBottom","messagesEnd","scrollIntoView","behavior","block","inline","newMessage","chat","name","scrollTop","refreshInterval","handleMessageBoxChange","handleMessageBoxKeyPress","handleSmiley","clearInterval","chatId","submitMessage","_this2","chatbubbles","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","messages","Symbol","iterator","next","done","bubbleClassName","from","push","key","_id","err","return","style","float","clear","ref","el","title","Results","status","focus","resultElement","axios","require","SearchResults","handleInputChange","handleSubmit","handleFocus","handleBlur","query","visible","result","handleToast","post","concat","globalSettings","serverRoot","people","withCredentials","then","response","handleSearchResult","catch","error","console","onFocus","onBlur","components_Results","Chat","activate","onActivate","active","ChatApp","chatInterval","notDownloaded","toast","toastTime","Date","now","activeChatIndex","config","chats","fecthNewMessagesForParticularChat","handleNewChat","refreshChatLists","setupSockets","createInitialChatRefreshInterval","log","setInterval","element","data","empty","_this3","socket","io","on","msg","password","_this4","loginFormMessage","src","loading","alt","seti","loggedIn","get","newState","alert","toString","oldActiveIndex","emit","index","find","item","i","length","date","_this5","newChats","to","Math","random","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","components_Chat","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","components_Toast","components_SearchResults","ChatBox","LoginForm","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","src_App","document","getElementById","URL","process","href","origin","addEventListener","fetch","contentType","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","module","exports","__webpack_require__","p","email","accessKey"],"mappings":"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","file":"static/js/main.d5a56612.chunk.js","sourcesContent":["import React from 'react';\nclass Toast extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.fadeOut = this.fadeOut.bind(this);\n        this.state = {\n            hidden: true,\n            message: \"\",\n            interval: setTimeout(this.fadeOut, 0),\n            time: this.props.time,\n        }\n    }\n\n    componentWillUnmount() {\n        clearTimeout(this.state.interval);\n        this.setState({\n            interval: null\n        })\n    }\n\n    componentDidUpdate() {\n        if (this.props.time !== this.state.time) {\n            if (this.props.message) {\n                this.setState({\n                    hidden: false,\n                    message: this.props.message,\n                    interval: setTimeout(this.fadeOut, this.props.toastDuration),\n                    time: this.props.time,\n                })\n            }\n        }\n    }\n\n    fadeOut() {\n        this.setState({\n            hidden: true\n        })\n    }\n\n    render() {\n        return (\n            <div className={(this.state.hidden) ? \"toast hidden\" : \"toast visible\"} tabIndex=\"100\">\n                {this.state.message}\n            </div >\n        )\n    }\n}\n\nexport default Toast;","import React from 'react';\nclass Loginform extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            message: \"\",\n            passwordInput: \"\",\n            nameInput: \"\",\n            newAccount: false\n        }\n        this.handleProceedButton = this.handleProceedButton.bind(this)\n        this.handleNameChange = this.handleNameChange.bind(this)\n        this.handlePasswordChange = this.handlePasswordChange.bind(this)\n        this.handleNewAccountChange = this.handleNewAccountChange.bind(this)\n        this.handleEnterkey = this.handleEnterkey.bind(this)\n    }\n\n    handleEnterkey(e) {\n        if (e.keyCode === 13) {\n            this.handleProceedButton()\n        }\n    }\n\n    handleProceedButton() {\n        this.props.handleProceedButton(this.state.nameInput, this.state.passwordInput, this.state.newAccount);\n    }\n\n    handleNameChange(e) {\n        this.setState({\n            nameInput: e.target.value\n        })\n    }\n\n    handlePasswordChange(e) {\n        this.setState({\n            passwordInput: e.target.value\n        })\n    }\n\n    handleNewAccountChange(e) {\n        this.setState({\n            newAccount: e.target.checked\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"chat-app container login\">\n                <form onSubmit={(e) => { e.preventDefault() }}>\n                    <h1 className=\"login-text\">Welcome to Chat</h1>\n                    <p className=\"login-subtext\">Login or Create an Account to start chatting.<br /> Enter your username and password or create new ones, and an account will be created for you.</p>\n                    <input className=\"login-field theme-input\" placeholder=\"Full Name\" maxLength=\"64\" value={this.state.nameInput} onChange={this.handleNameChange} />\n                    <input className=\"login-field theme-input\" type=\"password\" onKeyUp={this.handleEnterkey} placeholder=\"Password\" maxLength=\"128\" value={this.state.passwordInput} onChange={this.handlePasswordChange} />\n                    <br />\n                    <button className=\"theme-btn login-field\" onClick={this.handleProceedButton}>Proceed</button>\n                    <br />\n                    <input type=\"checkbox\" className=\"checkbox\" id=\"new-account\" checked={this.state.newAccount} onChange={this.handleNewAccountChange} />\n                    <label htmlFor=\"new-account\">&nbsp;Create a new account</label>\n                    <br />\n                    <p className=\"message\">{this.props.message}</p>\n                    <small>&copy; 2019 Diyanshu Agrawal. All rights reserved.</small>\n                </form>\n            </div >\n        )\n    }\n}\n\nexport default Loginform;","import React from 'react';\n\nclass Chatbox extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            newMessage: \"\",\n            chat: props.chat,\n            name: props.name,\n            scrollTop: null,\n            refreshInterval: null,\n        };\n        this.handleMessageBoxChange = this.handleMessageBoxChange.bind(this)\n        this.handleMessageBoxKeyPress = this.handleMessageBoxKeyPress.bind(this)\n        this.handleSmiley = this.handleSmiley.bind(this)\n    }\n\n    componentDidMount() {\n        this.scrollToBottom();\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.state.refreshInterval)\n    }\n\n    componentDidUpdate() {\n        this.scrollToBottom();\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chat && props.name) {\n            if (props.chat !== state.chat || props.name !== state.name) {\n                state.name = props.name;\n                state.chat = props.chat;\n            }\n        }\n        return state\n    }\n\n    handleMessageBoxChange(e) {\n        this.setState({\n            newMessage: e.target.value\n        })\n    }\n\n    scrollToBottom = () => {\n        this.messagesEnd.scrollIntoView({ behavior: \"smooth\", block: 'nearest', inline: 'start' });\n    }\n\n    handleMessageBoxKeyPress(e) {\n        if (e.keyCode === 13) {\n            const value = this.state.newMessage;\n            const chatId = this.props.chatId;\n            this.props.submitMessage(this.state.name, value, chatId);\n            this.setState({\n                newMessage: \"\",\n            })\n        }\n    }\n\n    handleSmiley() {\n        var newMessage = this.state.newMessage;\n        newMessage += \" 🙂 \";\n        this.setState({\n            newMessage: newMessage\n        })\n    }\n\n    render() {\n        const chatbubbles = [];\n        if (!this.state.chat) {\n            return (<div className=\"chatbox \" >\n                <div className=\"bubble-container\">\n                    <p className=\"text-center white-text\">Choose a conversation to show messages.</p>\n                    <div style={{ float: \"left\", clear: \"both\" }}\n                        ref={(el) => { this.messagesEnd = el; }}>\n                    </div>\n                </div>\n            </div >)\n        } else {\n            for (const message of this.state.chat.messages) {\n                const bubbleClassName = \"chat-bubble \" + (message.from === this.state.name ? \"received\" : \"sent\");\n                chatbubbles.push(\n                    <div className={bubbleClassName} key={message._id}>\n                        <div className=\"chat-bubble-info\">\n                            {message.from}\n                        </div>\n                        <div className=\"chat-bubble-message\">\n                            {message.message}\n                        </div>\n                    </div>\n                )\n            }\n            return (\n                <div className=\"chatbox \">\n                    <div className=\"bubble-container\">\n                        {chatbubbles}\n                        <div style={{ float: \"left\", clear: \"both\" }}\n                            ref={(el) => { this.messagesEnd = el; }}>\n                        </div>\n                    </div>\n                    <div className=\"chat-text-box-container\">\n                        <input className=\"chat-text-box\" placeholder=\"Enter your message here\" value={this.state.newMessage} onChange={this.handleMessageBoxChange} onKeyUp={this.handleMessageBoxKeyPress} maxLength={256} />\n                        <button className=\"smiley-button option-button\" title=\"Send smiling face\" onClick={this.handleSmiley}>🙂</button>\n                        <div className=\"clearfix\"></div>\n                    </div>\n                </div>\n            )\n        }\n    }\n}\n\nexport default Chatbox;","import React from 'react';\n\nfunction Results(props) {\n    if (props.status.focus) {\n        return (\n            <div>\n                <div className=\"search-result visible\">\n                    <div className=\"search-results-list\">\n                        {props.status.resultElement}\n                    </div>\n                </div>\n            </div >\n        )\n    } else {\n        return (\n            <div></div>\n        )\n    }\n}\n\nexport default Results;","import React from 'react';\nimport Results from './Results';\nconst axios = require('axios');\n\nclass SearchResults extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleInputChange = this.handleInputChange.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.handleFocus = this.handleFocus.bind(this)\n        this.handleBlur = this.handleBlur.bind(this)\n        this.state = {\n            query: \"\",\n            visible: false,\n            result: \"\",\n            id: \"search-input\",\n            resultElement: <span>Press enter to search, and only an exact match will appear for privacy.</span>\n        };\n    }\n\n    handleBlur() {\n        this.setState({\n            focus: false,\n            query: \"\"\n        })\n    }\n\n    handleFocus() {\n        this.setState({\n            focus: true,\n        })\n    }\n\n    handleInputChange(e) {\n        this.setState({\n            query: e.target.value\n        })\n    }\n\n    handleSubmit(e) { // For new chat search\n        if (e.keyCode === 13) {\n            this.props.handleToast(\"Searching\", 2000);\n            const query = this.state.query;\n            axios.post(`${this.props.globalSettings.serverRoot}my-chats/search`, {\n                query: query,\n                people: this.props.people,\n                withCredentials: true\n            }, {\n                    withCredentials: true\n                }).then((response) => {\n                    this.props.handleSearchResult(response)\n                }).catch((error) => {\n                    console.error(\"Searching\", error)\n                })\n            this.setState({\n                query: \"\"\n            })\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <input className=\"theme-btn chat-search\" placeholder=\"Search for people\" onChange={this.handleInputChange} onKeyUp={this.handleSubmit} value={this.state.query} onFocus={this.handleFocus} onBlur={this.handleBlur} />\n                <Results status={this.state} maxLength={64} />\n            </div>\n        )\n    }\n}\n\nexport default SearchResults;","import React from 'react';\n\nclass Chat extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.activate = this.activate.bind(this);\n    }\n\n    activate() {\n        this.props.onActivate(this.props.name)\n    }\n\n    render() {\n        return (\n            <li className={(this.props.active) ? \"active\" : \"\"} onClick={this.activate}>{this.props.name}</li>\n        )\n    }\n}\n\nexport default Chat;\n","// Author Divyanshu Agrawal\n// (C) 2019 - Present , All rights reserved.\n\nimport React from 'react';\nimport config from './config.js'\nimport io from 'socket.io-client';\nimport loading from './loading.gif'\nimport Toast from './components/Toast';\nimport Loginform from './components/LoginForm';\nimport Chatbox from './components/ChatBox';\nimport SearchResults from './components/SearchResults';\nimport Chat from './components/Chat';\nimport './css/bootstrap-grid.css';\nimport './css/roboto.css';\nimport './css/App.css';\nconst axios = require('axios');\n\nclass ChatApp extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.activate = this.activate.bind(this);\n    this.state = {\n      chatInterval: null,\n      notDownloaded: true,\n      toast: null,\n      toastTime: Date.now(),\n      toastDuration: 5000,\n      active: null,\n      activeChatIndex: -1,\n      globalSettings: config.globalSettings,\n      chats: [\n      ]\n    }\n    this.handleProceedButton = this.handleProceedButton.bind(this);\n    this.fecthNewMessagesForParticularChat = this.fecthNewMessagesForParticularChat.bind(this);\n    this.submitMessage = this.submitMessage.bind(this)\n    this.handleNewChat = this.handleNewChat.bind(this)\n    this.refreshChatLists = this.refreshChatLists.bind(this)\n    this.setupSockets = this.setupSockets.bind(this)\n    this.createInitialChatRefreshInterval = this.createInitialChatRefreshInterval.bind(this);\n    this.handleToast = this.handleToast.bind(this)\n  }\n\n  createInitialChatRefreshInterval() {\n    console.log(\"Initial Chat Lists Interval Set for 6000 seconds\");\n    this.setState({\n      chatInterval: setInterval(this.refreshChatLists, 6000),\n    })\n\n  }\n\n  refreshChatLists() {\n    if (this.state.globalSettings.name) {\n      const people = [];\n      if (this.state.chats) {\n        for (const element of this.state.chats) {\n          people.push(element.name);\n        }\n      }\n\n      axios.post(`${this.state.globalSettings.serverRoot}my-chats/refresh-chats`, {\n        people: people,\n        withCredentials: true\n      }, {\n          withCredentials: true\n        }).then((response) => {\n          const data = response.data;\n          if (data.error) {\n            console.error(\"Refresh chats error ->\", data.error);\n            this.setState({\n              toast: \"Error while refreshing chat lists\",\n              toastTime: Date.now(),\n              toastDuration: 5000\n            })\n          } else {\n            if (!data.empty && data) {\n              var chats = this.state.chats;\n              chats = chats.concat(data);\n              this.setState({\n                chats: chats,\n                toast: \"New conversation loaded\",\n                toastTime: Date.now(),\n                toastDuration: 5000,\n              })\n            }\n          }\n        })\n    }\n  }\n\n  setupSockets() {\n    var socket = io(this.state.globalSettings.serverRoot);\n    socket.on('test', function (msg) {\n      console.log(\"Test Socket message  : \", msg);\n    });\n    this.setState({\n      socket: socket\n    })\n    socket.on(\"new-message\", (data) => {\n      console.log(\"Message from server  :\", data);\n      const chats = this.state.chats;\n      const activeChatIndex = this.state.activeChatIndex;\n      chats[activeChatIndex].messages.push(data);\n      this.setState({\n        chats: chats\n      })\n    })\n  }\n\n  handleProceedButton(name, password, newAccount) {\n    // Handleproceedbutton handles login and initial download of saved chats, also handles new accounts\n    this.setState({\n      loginFormMessage: (\n        <span>\n          <img src={loading} className=\"loading\" alt=\"...\" />\n          <span>Please wait, attempting to log you in...  </span>\n        </span>\n      )\n    })\n    axios.post(this.state.globalSettings.serverRoot + \"login\", {\n      name: name,\n      password: password,\n      newAccount: newAccount,\n      withCredentials: true,\n    }, {\n        withCredentials: true\n      }).then(\n        (response) => {\n          if (response.data.error) {\n            this.setState({\n              loginFormMessage: response.data.error\n            })\n            console.error(\"Login attempt response error : \", response.data);\n            return;\n          }\n          const seti = this.state.globalSettings;\n          seti.name = response.data.name;\n          seti.loggedIn = true;\n          this.setState({\n            globalSettings: seti,\n            newAccount: response.data.newAccount\n          })\n          this.setupSockets();\n          axios.get(`${this.state.globalSettings.serverRoot}my-chats`, {\n            withCredentials: true\n          }, {\n              withCredentials: true\n            }).then((response) => {\n              if (response.data.error) {\n                this.setState({\n                  toast: \"An error occurred while trying to load your chats\\n, please try again.\",\n                  toastTime: Date.now(),\n                  toastDuration: 5000,\n                })\n                console.error(\"Login\", response.data.error)\n                return;\n              } else {\n                const newState = this.state;\n                newState.chats = response.data;\n                newState.notDownloaded = false;\n                this.setState(newState);\n                setTimeout(this.createInitialChatRefreshInterval, 6000);\n              }\n            }).catch(function (error) {\n              alert(\"An error occured while fetching your chats, please reload the app\");\n              console.error(\"Fetching chats\", error);\n            })\n        }\n      ).catch((error) => {\n        console.error(\"OOPS\", error)\n        this.setState({\n          toast: error.toString(),\n          toastTime: Date.now(),\n          toastDuration: 5000,\n        })\n      })\n  }\n\n  activate(name) {\n    if (this.state.activeChatIndex >= 0) {\n      var oldActiveIndex = this.state.activeChatIndex;\n      console.log(\"Leaveing room\", this.state.chats[oldActiveIndex].id);\n      this.state.socket.emit('leave-room', this.state.chats[oldActiveIndex].id);\n    }\n    this.setState({\n      active: name\n    })\n    var index = -1;\n    this.state.chats.find(function (item, i) {\n      if (item.name === name) {\n        index = i;\n        return i;\n      }\n    })\n    console.log(\"Chat switched\");\n    this.setState({\n      activeChatIndex: index\n    })\n    console.log(\"Loading new messages for selected  chat\", this.state.chats[index].id, this.state.chats[index].messages[this.state.chats[index].messages.length - 1].date);\n    this.fecthNewMessagesForParticularChat(null, this.state.chats[index].id, this.state.chats[index].messages[this.state.chats[index].messages.length - 1].date)\n    console.log(\"Joining room\", this.state.chats[index].id);\n    this.state.socket.emit('join-room', this.state.chats[index].id);\n  }\n\n  fecthNewMessagesForParticularChat(name, chatId, date) {\n    axios.post(`${this.state.globalSettings.serverRoot}my-chats/new-messages`, {\n      withCredentials: true,\n      date: date,\n      chatId: chatId\n    }, {\n        withCredentials: true\n      }).then((response) => {\n        if (response.data.length > 0) {\n          const newChats = this.state.chats;\n          newChats[this.state.activeChatIndex].messages = newChats[this.state.activeChatIndex].messages.concat(response.data);\n          this.setState({\n            chats: newChats\n          })\n        }\n      }).catch((error) => {\n        this.setState({\n          toast: \"Error while fetching new chats.\",\n          toastTime: Date.now(),\n          toastDuration: 5000,\n        })\n        console.error(\"Fetch new messages error - >\", error);\n      })\n  }\n\n  submitMessage(to, value, chatId) {\n    // Submit a chat message  withing a conversation\n    //from parameter sent is uselss.\n    this.setState({\n      toast: \"Posting message\",\n      toastTime: Date.now(),\n      toastDuration: 1000,\n    });\n    const socket = this.state.socket;\n    socket.emit(\"new-message\", {\n      message: value,\n      chatId: chatId,\n      from: this.state.globalSettings.name\n    })\n  }\n\n  handleToast(toast, toastDuration) {\n    this.setState({\n      toast: toast,\n      toastTime: Date.now(),\n      toastDuration: toastDuration\n    })\n  }\n\n  handleNewChat(data) {\n    if (data.data.error) {\n      console.error(\"New Chat Received error\", data.data.error);\n      this.setState({\n        toast: \"Failed to create a new conversation\",\n        toastTime: Math.random(),\n        toastDuration: 5000,\n      })\n    } else {\n      if (!data.data.empty) {\n        this.setState({\n          toast: \"Success : New Conversation will download in 6 seconds ... \",\n          toastTime: Date.now(),\n          toastDuration: 10000,\n        })\n      } else {\n        this.setState({\n          toast: \"No matching account for your query\",\n          toastTime: Math.random(),\n          toastDuration: 5000,\n        })\n      }\n\n    }\n  }\n\n  render() {\n    if (!this.state.globalSettings.loggedIn) {\n      return (\n        <div>\n          <Toast message={this.state.toast} time={this.state.toastTime} toastDuration={this.state.toastDuration} ></Toast>\n          <div className=\"mobile\">\n            <h1>🙁 📱 🚫</h1>\n            <p>We are sorry, but we currently dont support mobile devices Please use a desktop.</p>\n          </div>\n          <Loginform globalSettings={this.state.globalSettings} handleProceedButton={this.handleProceedButton} message={this.state.loginFormMessage}></Loginform>\n        </div>\n      )\n    } else {\n      var chats = [];\n      for (var element of this.state.chats) {\n        chats.push(\n          <Chat name={element.name} onActivate={this.activate} globalSettings={this.state.globalSettings} active={(element.name === this.state.active)} key={element.name} />\n        )\n      }\n      if (this.state.notDownloaded) {\n        chats = <p className=\"no-chats text-center padding-10 color-white\">\n          <img className=\"loading\" src={loading} alt=\"...\" />\n          Downloading conversations...</p>\n      } else if (chats.length === 0) {\n        chats = <p className=\"no-chats text-center padding-10 color-white\">\n          To begin, search the exact name of a person and start chatting!\n                </p>\n      }\n      // List of already chatted people for SearchResults\n      const people = [];\n      for (element of this.state.chats) {\n        people.push(element.name);\n      }\n      var chatId = null;\n      if (this.state.chats[this.state.activeChatIndex]) {\n        chatId = this.state.chats[this.state.activeChatIndex].id;\n      }\n      return (\n        <div>\n          <div className=\"chat-app container\">\n            <Toast message={this.state.toast} time={this.state.toastTime} toastDuration={this.state.toastDuration} ></Toast>\n            <div className=\"row app-row\">\n              <div className=\"col-4 chats\">\n                <div className=\"chats-inner\">\n                  <SearchResults globalSettings={this.state.globalSettings} people={people} handleSearchResult={this.handleNewChat} handleToast={this.handleToast} />\n                  <ul>\n                    {chats}\n                  </ul>\n                </div>\n              </div>\n              <div className=\"col-8 chatbox-container\">\n                <Chatbox name={this.state.active} globalSettings={this.state.globalSettings} chat={this.state.chats[this.state.activeChatIndex]} submitMessage={this.submitMessage} socket={this.state.socket} chatId={chatId}></Chatbox>\n              </div>\n            </div>\n          </div>\n        </div>)\n    }\n  }\n}\n\nexport default ChatApp;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","module.exports = __webpack_public_path__ + \"static/media/loading.e6ebdebf.gif\";","var globalSettings = {\n    name: null,\n    id: null,\n    email: null,\n    accessKey: null,\n    loggedIn: null,\n    serverRoot: \"http://localhost:3000/\",\n}\n\n/*\nserverRoot: \"https://chat-app-hereisdx.herokuapp.com/\",\nserverRoot: \"http://localhost:3000\",\n*/\n\nmodule.exports = {\n    globalSettings: globalSettings,\n};"],"sourceRoot":""}