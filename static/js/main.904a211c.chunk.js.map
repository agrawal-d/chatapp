{"version":3,"sources":["components/Toast.js","components/LoginForm.js","components/ChatBox.js","components/Results.js","components/SearchResults.js","components/Chat.js","components/OfflineBox.js","App.js","serviceWorker.js","index.js","loading.gif","config.js","menu.svg"],"names":["Toast","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","fadeOut","bind","assertThisInitialized","state","hidden","message","interval","setTimeout","time","clearTimeout","setState","toastDuration","react_default","a","createElement","className","tabIndex","React","Component","Loginform","passwordInput","nameInput","newAccount","handleProceedButton","handleNameChange","handlePasswordChange","handleNewAccountChange","handleEnterkey","e","keyCode","target","value","checked","id","onSubmit","preventDefault","placeholder","maxLength","onChange","type","onKeyUp","onClick","htmlFor","Chatbox","scrollToBottom","messagesEnd","scrollIntoView","behavior","block","inline","console","log","newMessage","chat","name","scrollTop","refreshInterval","handleMessageBoxChange","handleMessageBoxKeyPress","handleSmiley","clearInterval","_this2","chatId","submitMessage","textBox","blur","focus","_this3","chatbubbles","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","messages","Symbol","iterator","next","done","bubbleClassName","from","push","key","_id","err","return","style","float","clear","ref","el","input","title","Results","status","resultElement","axios","require","SearchResults","handleInputChange","handleSubmit","handleFocus","handleBlur","query","visible","result","handleToast","post","concat","globalSettings","serverRoot","people","withCredentials","then","response","handleSearchResult","catch","error","onFocus","onBlur","components_Results","Chat","activate","onActivate","c","active","href","OfflineBox","online","prevProps","onlineClass","fullscreen","ChatApp","isFull","menuVisible","chatInterval","notDownloaded","toast","toastTime","Date","now","activeChatIndex","config","chats","fecthNewMessagesForParticularChat","handleNewChat","refreshChatLists","setupSockets","createInitialChatRefreshInterval","handleMenuToggle","setInterval","element","data","empty","socket","io","emit","on","password","_this4","window","innerWidth","document","getElementById","request","loginFormMessage","src","loading","alt","seti","loggedIn","get","newState","alert","toString","oldActiveIndex","oldActive","onine","index","find","item","i","length","date","_this5","newChats","to","Math","random","visibility","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","components_Chat","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","menuVisibleClassName","components_OfflineBox","components_Toast","menuIcon","components_SearchResults","ChatBox","LoginForm","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","src_App","URL","process","origin","addEventListener","fetch","contentType","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","module","exports","__webpack_require__","p","email","accessKey"],"mappings":"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","file":"static/js/main.904a211c.chunk.js","sourcesContent":["import React from 'react';\nclass Toast extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.fadeOut = this.fadeOut.bind(this);\n        this.state = {\n            hidden: true,\n            message: \"\",\n            interval: setTimeout(this.fadeOut, 0),\n            time: this.props.time,\n        }\n    }\n\n    componentWillUnmount() {\n        clearTimeout(this.state.interval);\n        this.setState({\n            interval: null\n        })\n    }\n\n    componentDidUpdate() {\n        if (this.props.time !== this.state.time) {\n            if (this.props.message) {\n                this.setState({\n                    hidden: false,\n                    message: this.props.message,\n                    interval: setTimeout(this.fadeOut, this.props.toastDuration),\n                    time: this.props.time,\n                })\n            }\n        }\n    }\n\n    fadeOut() {\n        this.setState({\n            hidden: true\n        })\n    }\n\n    render() {\n        return (\n            <div className={(this.state.hidden) ? \"toast hidden\" : \"toast visible\"} tabIndex=\"100\">\n                {this.state.message}\n            </div >\n        )\n    }\n}\n\nexport default Toast;","import React from 'react';\nclass Loginform extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            message: \"\",\n            passwordInput: \"\",\n            nameInput: \"\",\n            newAccount: false\n        }\n        this.handleProceedButton = this.handleProceedButton.bind(this)\n        this.handleNameChange = this.handleNameChange.bind(this)\n        this.handlePasswordChange = this.handlePasswordChange.bind(this)\n        this.handleNewAccountChange = this.handleNewAccountChange.bind(this)\n        this.handleEnterkey = this.handleEnterkey.bind(this)\n    }\n\n    handleEnterkey(e) {\n        if (e.keyCode === 13) {\n            this.handleProceedButton()\n        }\n    }\n\n    handleProceedButton() {\n        this.props.handleProceedButton(this.state.nameInput, this.state.passwordInput, this.state.newAccount);\n    }\n\n    handleNameChange(e) {\n        this.setState({\n            nameInput: e.target.value\n        })\n    }\n\n    handlePasswordChange(e) {\n        this.setState({\n            passwordInput: e.target.value\n        })\n    }\n\n    handleNewAccountChange(e) {\n        this.setState({\n            newAccount: e.target.checked\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"chat-app container login\" id=\"container\">\n                <form onSubmit={(e) => { e.preventDefault() }}>\n                    <h1 className=\"login-text\">Welcome to Chat</h1>\n                    <p className=\"login-subtext\">Login or Create an Account to start chatting.<br /> Enter your username and password or create new ones, and an account will be created for you.</p>\n                    <input className=\"login-field theme-input\" placeholder=\"Full Name\" maxLength=\"64\" value={this.state.nameInput} onChange={this.handleNameChange} />\n                    <input className=\"login-field theme-input\" type=\"password\" onKeyUp={this.handleEnterkey} placeholder=\"Password\" maxLength=\"128\" value={this.state.passwordInput} onChange={this.handlePasswordChange} />\n                    <br />\n                    <button className=\"theme-btn login-field\" onClick={this.handleProceedButton}>Proceed</button>\n                    <br />\n                    <input type=\"checkbox\" className=\"checkbox\" id=\"new-account\" checked={this.state.newAccount} onChange={this.handleNewAccountChange} />\n                    <label htmlFor=\"new-account\">&nbsp;Create a new account</label>\n                    <br />\n                    <p className=\"message\">{this.props.message}</p>\n                    <small>v1.6 <br></br>&copy; 2019 Diyanshu Agrawal. All rights reserved.</small>\n                </form>\n            </div >\n        )\n    }\n}\n\nexport default Loginform;","import React from 'react';\n\nclass Chatbox extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            newMessage: \"\",\n            chat: props.chat,\n            name: props.name,\n            scrollTop: null,\n            refreshInterval: null,\n        };\n        this.handleMessageBoxChange = this.handleMessageBoxChange.bind(this)\n        this.handleMessageBoxKeyPress = this.handleMessageBoxKeyPress.bind(this)\n        this.handleSmiley = this.handleSmiley.bind(this)\n    }\n\n    componentDidMount() {\n        this.scrollToBottom();\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.state.refreshInterval)\n    }\n\n    componentDidUpdate() {\n        this.scrollToBottom();\n        setTimeout(() => { this.scrollToBottom(); console.log(\"Delayed\") }, 1000);\n\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chat && props.name) {\n            if (props.chat !== state.chat || props.name !== state.name) {\n                state.name = props.name;\n                state.chat = props.chat;\n            }\n        }\n        return state\n    }\n\n    handleMessageBoxChange(e) {\n        this.setState({\n            newMessage: e.target.value\n        })\n    }\n\n    scrollToBottom = () => {\n        this.messagesEnd.scrollIntoView({ behavior: \"smooth\", block: 'nearest', inline: 'start' });\n        console.log(\"Scroll\")\n    }\n\n    handleMessageBoxKeyPress(e) {\n        if (e.keyCode === 13) {\n            const value = this.state.newMessage;\n            const chatId = this.props.chatId;\n            this.props.submitMessage(this.state.name, value, chatId);\n            this.setState({\n                newMessage: \"\",\n            })\n            this.textBox.blur();\n            setTimeout(this.scrollToBottom(), 500);\n        }\n    }\n\n    handleSmiley() {\n        var newMessage = this.state.newMessage;\n        newMessage += \" 🙂 \";\n        this.setState({\n            newMessage: newMessage\n        })\n        this.textBox.focus();\n    }\n\n    render() {\n        const chatbubbles = [];\n        if (!this.state.chat) {\n            return (<div className=\"chatbox \" >\n                <div className=\"bubble-container\">\n                    <p className=\"text-center white-text\">Choose a conversation to show messages.</p>\n                    <div style={{ float: \"left\", clear: \"both\" }}\n                        ref={(el) => { this.messagesEnd = el; }}>\n                    </div>\n                </div>\n            </div >)\n        } else {\n            for (const message of this.state.chat.messages) {\n                const bubbleClassName = \"chat-bubble \" + (message.from === this.state.name ? \"received\" : \"sent\");\n                chatbubbles.push(\n                    <div className={bubbleClassName} key={message._id}>\n                        <div className=\"chat-bubble-info\">\n                            {message.from}\n                        </div>\n                        <div className=\"chat-bubble-message\">\n                            {message.message}\n                        </div>\n                    </div>\n                )\n            }\n            return (\n                <div className=\"chatbox \">\n                    <div className=\"bubble-container\">\n                        {chatbubbles}\n                        <div style={{ float: \"left\", clear: \"both\" }}\n                            ref={(el) => { this.messagesEnd = el; }}>\n                        </div>\n                    </div>\n                    <div className=\"chat-text-box-container\">\n                        <input\n                            className=\"chat-text-box\"\n                            placeholder=\"Enter your message here\" value={this.state.newMessage}\n                            onChange={this.handleMessageBoxChange}\n                            onKeyUp={this.handleMessageBoxKeyPress}\n                            maxLength={256}\n                            ref={(input) => { this.textBox = input; }}\n                        />\n                        <button className=\"smiley-button option-button\" title=\"Send smiling face\" onClick={this.handleSmiley}>🙂</button>\n                        <div className=\"clearfix\"></div>\n                    </div>\n                </div>\n            )\n        }\n    }\n}\n\nexport default Chatbox;","import React from 'react';\n\nfunction Results(props) {\n    if (props.status.focus) {\n        return (\n            <div>\n                <div className=\"search-result visible\">\n                    <div className=\"search-results-list\">\n                        {props.status.resultElement}\n                    </div>\n                </div>\n            </div >\n        )\n    } else {\n        return (\n            <div></div>\n        )\n    }\n}\n\nexport default Results;","import React from 'react';\nimport Results from './Results';\nconst axios = require('axios');\n\nclass SearchResults extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleInputChange = this.handleInputChange.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.handleFocus = this.handleFocus.bind(this)\n        this.handleBlur = this.handleBlur.bind(this)\n        this.state = {\n            query: \"\",\n            visible: false,\n            result: \"\",\n            id: \"search-input\",\n            resultElement: <span>Press enter to search, and only an exact match will appear for privacy.</span>\n        };\n    }\n\n    handleBlur() {\n        this.setState({\n            focus: false,\n            query: \"\"\n        })\n    }\n\n    handleFocus() {\n        this.setState({\n            focus: true,\n        })\n    }\n\n    handleInputChange(e) {\n        this.setState({\n            query: e.target.value\n        })\n    }\n\n\n    handleSubmit(e) { // For new chat search\n        if (e.keyCode === 13) {\n            this.props.handleToast(\"Searching\", 2000);\n            const query = this.state.query;\n            axios.post(`${this.props.globalSettings.serverRoot}my-chats/search`, {\n                query: query,\n                people: this.props.people,\n                withCredentials: true\n            }, {\n                    withCredentials: true\n                }).then((response) => {\n                    this.props.handleSearchResult(response)\n                }).catch((error) => {\n                    console.error(\"Searching\", error)\n                })\n            this.setState({\n                query: \"\"\n            })\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <input className=\"theme-btn chat-search\" placeholder=\"Search for people\" onChange={this.handleInputChange} onKeyUp={this.handleSubmit} value={this.state.query} onFocus={this.handleFocus} onBlur={this.handleBlur} />\n                <Results status={this.state} maxLength={64} />\n            </div>\n        )\n    }\n}\n\nexport default SearchResults;","import React from 'react';\n\nclass Chat extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.activate = this.activate.bind(this);\n    }\n\n    activate() {\n        this.props.onActivate(this.props.name)\n    }\n\n    render() {\n        const ref = \"#\" + this.props.name;\n        return (\n            <li c\n                className={(this.props.active) ? \"active\" : \"\"}\n                onClick={this.activate}\n                href={ref}\n                id={this.props.name}\n            >\n                {this.props.name}\n            </li>\n        )\n    }\n}\n\nexport default Chat;\n","import React from 'react';\n\nclass OfflineBox extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            online: this.props.online ? \"online\" : \"offline\",\n            name: this.props.name\n        }\n\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.online !== prevProps.online || this.props.name !== prevProps.name) {\n            this.setState({\n                online: this.props.online ? \"online\" : \"offline\",\n                name: this.props.name\n            })\n        }\n    }\n\n\n    render() {\n        var onlineClass = \"offline-alert \" + this.state.online;\n        if (this.state.name) {\n            return (\n                <div className={onlineClass}>{this.props.name} is {this.state.online}</div>\n            )\n        } else {\n            return null;\n        }\n    }\n}\n\nexport default OfflineBox;","// Author Divyanshu Agrawal\n// (C) 2019 - Present , All rights reserved.\n\nimport React from 'react';\nimport config from './config.js'\nimport io from 'socket.io-client';\nimport loading from './loading.gif'\nimport Toast from './components/Toast';\nimport Loginform from './components/LoginForm';\nimport Chatbox from './components/ChatBox';\nimport SearchResults from './components/SearchResults';\nimport Chat from './components/Chat';\nimport OfflineBox from './components/OfflineBox';\nimport './css/bootstrap-grid.css';\nimport './css/roboto.css';\nimport './css/App.css';\nimport menuIcon from './menu.svg';\nvar fullscreen = require('fullscreen')\nconsole.log()\nconst axios = require('axios');\n\nclass ChatApp extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFull: false,\n      menuVisible: \"ivisible\",\n      chatInterval: null,\n      notDownloaded: true,\n      toast: null,\n      toastTime: Date.now(),\n      toastDuration: 5000,\n      active: null,\n      activeChatIndex: -1,\n      online: false,\n      globalSettings: config.globalSettings,\n      chats: [\n      ]\n    }\n    this.activate = this.activate.bind(this);\n    this.handleProceedButton = this.handleProceedButton.bind(this);\n    this.fecthNewMessagesForParticularChat = this.fecthNewMessagesForParticularChat.bind(this);\n    this.submitMessage = this.submitMessage.bind(this)\n    this.handleNewChat = this.handleNewChat.bind(this)\n    this.refreshChatLists = this.refreshChatLists.bind(this)\n    this.setupSockets = this.setupSockets.bind(this)\n    this.createInitialChatRefreshInterval = this.createInitialChatRefreshInterval.bind(this);\n    this.handleToast = this.handleToast.bind(this)\n    this.handleMenuToggle = this.handleMenuToggle.bind(this)\n\n  }\n\n  createInitialChatRefreshInterval() {\n    console.log(\"Initial Chat Lists Interval Set for 6000 seconds\");\n    this.setState({\n      chatInterval: setInterval(this.refreshChatLists, 6000),\n    })\n\n  }\n\n  refreshChatLists() {\n    if (this.state.globalSettings.name) {\n      const people = [];\n      if (this.state.chats) {\n        for (const element of this.state.chats) {\n          people.push(element.name);\n        }\n      }\n\n      axios.post(`${this.state.globalSettings.serverRoot}my-chats/refresh-chats`, {\n        people: people,\n        withCredentials: true\n      }, {\n          withCredentials: true\n        }).then((response) => {\n          const data = response.data;\n          if (data.error) {\n            console.error(\"Refresh chats error ->\", data.error);\n            this.setState({\n              toast: \"Error while refreshing chat lists\",\n              toastTime: Date.now(),\n              toastDuration: 5000\n            })\n          } else {\n            if (!data.empty && data) {\n              var chats = this.state.chats;\n              chats = chats.concat(data);\n              this.setState({\n                chats: chats,\n                toast: \"New conversation loaded\",\n                toastTime: Date.now(),\n                toastDuration: 5000,\n              })\n            }\n          }\n        })\n    }\n  }\n\n  setupSockets() {\n\n    var socket = io(this.state.globalSettings.serverRoot);\n\n    socket.emit(\"new-user\");\n\n    socket.on(\"new-message\", (data) => {\n      console.log(\"Message from server  :\", data);\n      const chats = this.state.chats;\n      const activeChatIndex = this.state.activeChatIndex;\n      chats[activeChatIndex].messages.push(data);\n      this.setState({\n        chats: chats\n      })\n    })\n\n    socket.on(\"get-status\", (data) => {\n      if (data === \"online\") {\n        this.setState({\n          online: true\n        })\n      } else {\n        this.setState({\n          online: false\n        })\n      }\n    })\n\n    socket.on(\"update-status\", (data) => {\n      console.log(\"Recieved update\", data)\n      if (data === \"online\") {\n        this.setState({\n          online: true\n        })\n      } else {\n        this.setState({\n          online: false\n        })\n      }\n    })\n\n    this.setState({\n      socket: socket\n    })\n  }\n\n  handleProceedButton(name, password, newAccount) {\n    if (window.innerWidth < 700) {\n      var el = document.getElementById(\"container\");\n      var fs = fullscreen(el)\n      fs.request();\n      this.setState({\n        fullscreen: \"fullScreen\"\n      })\n    }\n\n\n    // Handleproceedbutton handles login and initial download of saved chats, also handles new accounts\n    this.setState({\n      loginFormMessage: (\n        <span>\n          <img src={loading} className=\"loading\" alt=\"...\" />\n          <span>Please wait, attempting to log you in...  </span>\n        </span>\n      )\n    })\n    axios.post(this.state.globalSettings.serverRoot + \"login\", {\n      name: name,\n      password: password,\n      newAccount: newAccount,\n      withCredentials: true,\n    }, {\n        withCredentials: true\n      }).then(\n        (response) => {\n          if (response.data.error) {\n            this.setState({\n              loginFormMessage: response.data.error\n            })\n            console.error(\"Login attempt response error : \", response.data);\n            return;\n          }\n          const seti = this.state.globalSettings;\n          seti.name = response.data.name;\n          seti.loggedIn = true;\n          this.setState({\n            globalSettings: seti,\n            newAccount: response.data.newAccount\n          })\n          axios.get(`${this.state.globalSettings.serverRoot}my-chats`, {\n            withCredentials: true\n          }, {\n              withCredentials: true\n            }).then((response) => {\n              if (response.data.error) {\n                this.setState({\n                  toast: \"An error occurred while trying to load your chats\\n, please try again.\",\n                  toastTime: Date.now(),\n                  toastDuration: 5000,\n                })\n                console.error(\"Login\", response.data.error)\n                return;\n              } else {\n                this.setupSockets();\n                const newState = this.state;\n                newState.chats = response.data;\n                newState.notDownloaded = false;\n                this.setState(newState);\n                setTimeout(this.createInitialChatRefreshInterval, 6000);\n              }\n            }).catch(function (error) {\n              alert(\"An error occured while fetching your chats, please reload the app\");\n              console.error(\"Fetching chats\", error);\n            })\n        }\n      ).catch((error) => {\n        console.error(\"OOPS\", error)\n        this.setState({\n          toast: error.toString(),\n          toastTime: Date.now(),\n          toastDuration: 5000,\n        })\n      })\n  }\n\n  activate(name) {\n    if (this.state.activeChatIndex >= 0) {\n      var oldActiveIndex = this.state.activeChatIndex;\n      var oldActive = this.state.active;\n      console.log(\"Leaveing room\", oldActive, this.state.chats[oldActiveIndex].id);\n      this.state.socket.emit('leave-room', [oldActive, this.state.chats[oldActiveIndex].id]);\n    }\n\n\n\n    this.setState({\n      active: name,\n      onine: false\n    })\n\n\n\n    var index = -1;\n    this.state.chats.find(function (item, i) {\n      if (item.name === name) {\n        index = i;\n        return i;\n      }\n    })\n    console.log(\"Chat switched\");\n    this.setState({\n      activeChatIndex: index\n    })\n\n    this.state.socket.emit('join-room', [name, this.state.chats[index].id]);\n    console.log(\"Joining room\", name, this.state.chats[index].id);\n\n    console.log(\"Loading new messages for selected  chat\", this.state.chats[index].id, this.state.chats[index].messages[this.state.chats[index].messages.length - 1].date);\n    this.fecthNewMessagesForParticularChat(null, this.state.chats[index].id, this.state.chats[index].messages[this.state.chats[index].messages.length - 1].date)\n\n    this.state.socket.emit(\"get-status\", name);\n    console.log(\"Request online status for \", name);\n  }\n\n  fecthNewMessagesForParticularChat(name, chatId, date) {\n    axios.post(`${this.state.globalSettings.serverRoot}my-chats/new-messages`, {\n      withCredentials: true,\n      date: date,\n      chatId: chatId\n    }, {\n        withCredentials: true\n      }).then((response) => {\n        if (response.data.length > 0) {\n          const newChats = this.state.chats;\n          newChats[this.state.activeChatIndex].messages = newChats[this.state.activeChatIndex].messages.concat(response.data);\n          this.setState({\n            chats: newChats\n          })\n        }\n      }).catch((error) => {\n        this.setState({\n          toast: \"Error while fetching new chats.\",\n          toastTime: Date.now(),\n          toastDuration: 5000,\n        })\n        console.error(\"Fetch new messages error - >\", error);\n      })\n\n    this.handleMenuToggle();\n  }\n\n  submitMessage(to, value, chatId) {\n    if (window.innerWidth < 700) {\n      var el = document.getElementById(\"container\");\n      var fs = fullscreen(el)\n      fs.request();\n      this.setState({\n        fullscreen: \"fullScreen\"\n      })\n    }\n    // Submit a chat message  withing a conversation\n    //from parameter sent is uselss.\n    this.setState({\n      toast: \"Posting message\",\n      toastTime: Date.now(),\n      toastDuration: 1000,\n    });\n    const socket = this.state.socket;\n    console.log(\"Emitting new-message\", value);\n    socket.emit(\"new-message\", {\n      message: value,\n      chatId: chatId,\n      from: this.state.globalSettings.name\n    })\n  }\n\n  handleToast(toast, toastDuration) {\n    this.setState({\n      toast: toast,\n      toastTime: Date.now(),\n      toastDuration: toastDuration\n    })\n  }\n\n  handleNewChat(data) {\n    if (data.data.error) {\n      console.error(\"New Chat Received error\", data.data.error);\n      this.setState({\n        toast: \"Failed to create a new conversation\",\n        toastTime: Math.random(),\n        toastDuration: 5000,\n      })\n    } else {\n      if (!data.data.empty) {\n        this.setState({\n          toast: \"Success : New Conversation will download in 6 seconds ... \",\n          toastTime: Date.now(),\n          toastDuration: 10000,\n        })\n      } else {\n        this.setState({\n          toast: \"No matching account for your query\",\n          toastTime: Math.random(),\n          toastDuration: 5000,\n        })\n      }\n\n    }\n  }\n\n  handleMenuToggle() {\n    console.log(\"Menu toggle\")\n    var visibility;\n    if (this.state.menuVisible === \"menu-visible\") {\n      visibility = \"invisible\"\n    } else {\n      visibility = \"menu-visible\"\n    }\n    this.setState({\n      menuVisible: visibility\n    })\n    console.log(this.state.menuVisible)\n  }\n\n  render() {\n    if (!this.state.globalSettings.loggedIn) {\n      return (\n        <div>\n          <Toast message={this.state.toast} time={this.state.toastTime} toastDuration={this.state.toastDuration} ></Toast>\n          <div className=\"mobile\">\n            <h1>🙁 📱 🚫</h1>\n            <p>We are sorry, but we currently dont support mobile devices Please use a desktop.</p>\n          </div>\n          <Loginform globalSettings={this.state.globalSettings} handleProceedButton={this.handleProceedButton} message={this.state.loginFormMessage}></Loginform>\n        </div>\n      )\n    } else {\n      var chats = [];\n      for (var element of this.state.chats) {\n        chats.push(\n          <Chat name={element.name} onActivate={this.activate} globalSettings={this.state.globalSettings} active={(element.name === this.state.active)} key={element.name} />\n        )\n      }\n      if (this.state.notDownloaded) {\n        chats = <p className=\"no-chats text-center padding-10 color-white\">\n          <img className=\"loading\" src={loading} alt=\"...\" />\n          Downloading conversations...</p>\n      } else if (chats.length === 0) {\n        chats = <p className=\"no-chats text-center padding-10 color-white\">\n          To begin, search the exact name of a person and start chatting!\n                </p>\n      }\n      // List of already chatted people for SearchResults\n      const people = [];\n      for (element of this.state.chats) {\n        people.push(element.name);\n      }\n      var chatId = null;\n      if (this.state.chats[this.state.activeChatIndex]) {\n        chatId = this.state.chats[this.state.activeChatIndex].id;\n      }\n      const menuVisibleClassName = \"chats-inner \" + this.state.menuVisible;\n      return (\n        <div>\n          <OfflineBox online={this.state.online} name={this.state.active} />\n          <Toast message={this.state.toast} time={this.state.toastTime} toastDuration={this.state.toastDuration} ></Toast>\n          <div className=\"chat-app container\" id=\"container\">\n            <div className=\"row app-row\">\n              <div className=\"col-md-4 chats\">\n                <button className=\"menu-button\" onClick={this.handleMenuToggle}><img src={menuIcon} className=\"menu-icon\" alt=\"Menu\" /></button>\n                <comment>Below contains menu items => search box and list of chats etc but not the menu toggler</comment>\n                <div className={menuVisibleClassName}>\n                  <SearchResults globalSettings={this.state.globalSettings} people={people} handleSearchResult={this.handleNewChat} handleToast={this.handleToast} />\n                  <ul>\n                    {chats}\n                  </ul>\n                </div>\n              </div>\n              <div className=\"col-md-8 chatbox-container\">\n                <Chatbox name={this.state.active} globalSettings={this.state.globalSettings} chat={this.state.chats[this.state.activeChatIndex]} submitMessage={this.submitMessage} socket={this.state.socket} chatId={chatId}></Chatbox>\n              </div>\n            </div>\n          </div>\n        </div>)\n    }\n  }\n}\n\n\n\nexport default ChatApp;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","module.exports = __webpack_public_path__ + \"static/media/loading.e6ebdebf.gif\";","var globalSettings = {\n    name: null,\n    id: null,\n    email: null,\n    accessKey: null,\n    loggedIn: null,\n    serverRoot: \"https://chat-app-hereisdx.herokuapp.com/\",\n}\n/*\nserverRoot: \"http://localhost:3000/\",\nserverRoot: \"https://chat-app-hereisdx.herokuapp.com/\",\nserverRoot: \"http://192.168.43.153:3000/\",\n\n*/\n\nmodule.exports = {\n    globalSettings: globalSettings,\n};","module.exports = __webpack_public_path__ + \"static/media/menu.b4642141.svg\";"],"sourceRoot":""}